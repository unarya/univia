name: univia
services:
  db:
    image: univia:mysql
    container_name: univia-mysql
    restart: always
    env_file:
      - path: ../configs/.env
        required: true
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    ports:
      - "3308:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - univia_network

  redis:
    image: redis:8.0.2-alpine
    container_name: univia-redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "6372:6379"
    volumes:
      - redis_data:/data
    networks:
      - univia_network

  minio:
    image: quay.io/minio/minio
    container_name: univia-minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data/minio --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio_data:/data/minio
    networks:
      - univia_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: univia-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - univia_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: univia-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list > /dev/null 2>&1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 15s
    networks:
      - univia_network

  app:
    image: univia:dev
    container_name: univia-api
    restart: always
    ports:
      - "${APP_PORT}:2000"
    env_file:
      - path: ../configs/.env
        required: true
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
      db:
        condition: service_started
    volumes:
      - ../:/app
    working_dir: /app/cmd/api
    networks:
      - univia_network
    entrypoint: ["/bin/sh", "-c", "/app/cmd/api/entrypoint.sh"]

  signaling:
    image: univia-signaling:dev
    container_name: univia-signaling
    restart: always
    ports:
      - "2112:2112"
    env_file:
      - path: ../configs/.env
        required: true
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../:/app
    working_dir: /app/cmd/signaling
    networks:
      - univia_network
    entrypoint: ["/bin/sh", "-c", "/app/cmd/signaling/entrypoint.sh"]

volumes:
  db_data:
    driver: local
  redis_data:
    name: ${APP_NAME}-redis-data
  minio_data:
    name: ${APP_NAME}-minio-data

networks:
  univia_network:
    driver: bridge