definitions:
  github_com_unarya_univia_internal_api_modules_role_models.Role:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  github_com_unarya_univia_internal_api_modules_user_models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      googleID:
        type: string
      id:
        type: string
      password:
        type: string
      phoneNumber:
        type: integer
      role:
        allOf:
        - $ref: '#/definitions/github_com_unarya_univia_internal_api_modules_role_models.Role'
        description: Foreign key to Role
      roleID:
        type: string
      status:
        type: boolean
      twitterID:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  github_com_unarya_univia_pkg_types.AssignPermissionRequest:
    properties:
      permission_ids:
        example:
        - '[]'
        items:
          type: string
        type: array
      role_id:
        example: 36byte
        type: string
    type: object
  github_com_unarya_univia_pkg_types.ChangePasswordRequest:
    properties:
      new_password:
        example: newPassword123
        minLength: 8
        type: string
      old_password:
        example: oldPassword123
        type: string
      user_id:
        example: 1
        type: integer
    required:
    - new_password
    - old_password
    - user_id
    type: object
  github_com_unarya_univia_pkg_types.CreatePermissionRequest:
    properties:
      name:
        example: allow_create_post
        type: string
    type: object
  github_com_unarya_univia_pkg_types.CreateRoleRequest:
    properties:
      name:
        example: team_leader
        type: string
    type: object
  github_com_unarya_univia_pkg_types.ForgotPasswordRequest:
    properties:
      email:
        example: user@example.com
        type: string
    required:
    - email
    type: object
  github_com_unarya_univia_pkg_types.GetUserAvatarRequest:
    properties:
      user_id:
        example: 1
        type: integer
    required:
    - user_id
    type: object
  github_com_unarya_univia_pkg_types.LikeRequest:
    properties:
      post_id:
        type: string
    type: object
  github_com_unarya_univia_pkg_types.ListNotificationRequest:
    properties:
      all:
        example: true
        type: boolean
      current_page:
        example: 1
        type: integer
      is_seen:
        example: true
        type: boolean
      items_per_page:
        example: 10
        type: integer
      order_by:
        example: id
        type: string
      search_value:
        example: general
        type: string
      sort_by:
        example: asc
        type: string
    type: object
  github_com_unarya_univia_pkg_types.LoginRequest:
    properties:
      email:
        example: user@example.com
        type: string
      password:
        example: password123
        type: string
      phone_number:
        example: "+84901234567"
        type: string
      username:
        example: johndoe
        type: string
    required:
    - password
    type: object
  github_com_unarya_univia_pkg_types.RenewPasswordRequest:
    properties:
      new_password:
        example: newPassword123
        minLength: 8
        type: string
      user_id:
        example: 1
        type: integer
    required:
    - new_password
    - user_id
    type: object
  github_com_unarya_univia_pkg_types.RoleResponse:
    properties:
      id:
        example: 79fb3083-a010-11f0-94f9-362064ef513e
        type: string
      name:
        example: team_leader
        type: string
    type: object
  github_com_unarya_univia_pkg_types.StatusBadRequest:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: Bad Request
        type: string
    type: object
  github_com_unarya_univia_pkg_types.StatusCreated:
    properties:
      code:
        example: 201
        type: integer
      message:
        example: Created
        type: string
    type: object
  github_com_unarya_univia_pkg_types.StatusForbidden:
    properties:
      code:
        example: 403
        type: integer
      message:
        example: Forbidden
        type: string
    type: object
  github_com_unarya_univia_pkg_types.StatusInternalError:
    properties:
      code:
        example: 500
        type: integer
      message:
        example: Internal Server Error
        type: string
    type: object
  github_com_unarya_univia_pkg_types.StatusOK:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Success
        type: string
    type: object
  github_com_unarya_univia_pkg_types.StatusResponseVerification:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Verification code sent to your email. Please verify to process.
        type: string
    type: object
  github_com_unarya_univia_pkg_types.StatusUnauthorized:
    properties:
      code:
        example: 401
        type: integer
      message:
        example: Unauthorized
        type: string
    type: object
  github_com_unarya_univia_pkg_types.StatusVerificationCode:
    properties:
      code:
        example: 200
        type: integer
      message:
        example: Verification successful
        type: string
    type: object
  github_com_unarya_univia_pkg_types.SuccessCreateRoleResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.RoleResponse'
      status:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusCreated'
    type: object
  github_com_unarya_univia_pkg_types.SuccessDisLikeAPostResponse:
    properties:
      data:
        properties:
          totalLikes:
            example: 1
            type: integer
        type: object
      status:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusOK'
    type: object
  github_com_unarya_univia_pkg_types.SuccessLikeAPostResponse:
    properties:
      data:
        properties:
          totalLikes:
            example: 1
            type: integer
        type: object
      status:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusOK'
    type: object
  github_com_unarya_univia_pkg_types.SuccessListCategoriesResponse:
    properties:
      data:
        example:
        - '[]'
        items:
          type: string
        type: array
      status:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusOK'
    type: object
  github_com_unarya_univia_pkg_types.SuccessListRolesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.RoleResponse'
        type: array
      status:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusOK'
    type: object
  github_com_unarya_univia_pkg_types.SuccessLoginEmailResponse:
    properties:
      data:
        example: example@hotmail.com
        type: string
      status:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusResponseVerification'
    type: object
  github_com_unarya_univia_pkg_types.SuccessResponse:
    properties:
      data: {}
      status:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusOK'
    type: object
  github_com_unarya_univia_pkg_types.SuccessVerifyCodeResponse:
    properties:
      data:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.TokenData'
      status:
        $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusVerificationCode'
    type: object
  github_com_unarya_univia_pkg_types.TokenData:
    properties:
      access_token:
        example: 8ef033a06c2035ad5ba7b585918b7455a899e35da086ee0e84c98303d01ba9fc
        type: string
      refresh_token:
        example: f38c31612b2b6f03caaa8a8fb8e0809ab21e7403d9fe7c9fb358a5b5255c1959
        type: string
    type: object
  github_com_unarya_univia_pkg_types.UpdateSeenRequest:
    properties:
      notification_id:
        example: 36byte
        type: string
    type: object
  github_com_unarya_univia_pkg_types.VerifyCodeRequest:
    properties:
      code:
        example: "257699"
        type: string
      email:
        example: ties.node@outlook.com
        type: string
    type: object
  internal_api_routes.HealthResponse:
    properties:
      status:
        example: ok
        type: string
    type: object
  internal_api_routes.ReadySuccessResponse:
    properties:
      status:
        example: ok
        type: string
    type: object
  internal_api_routes.ReadyUnavailableResponse:
    properties:
      status:
        example: unavailable
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/change-password:
    post:
      consumes:
      - application/json
      description: Change password by providing old and new password
      parameters:
      - description: Change password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      summary: Change Password
      tags:
      - Authentication
  /api/v1/auth/confirm-forgot-password:
    post:
      consumes:
      - application/json
      description: handles the verification code process
      parameters:
      - description: Verify Code
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.VerifyCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Tokens response
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessVerifyCodeResponse'
        "400":
          description: Invalid Input
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      summary: Verify the code
      tags:
      - Authentication
  /api/v1/auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Send a verification email for password reset
      parameters:
      - description: Email
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Verification email sent
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      summary: Forgot Password
      tags:
      - Authentication
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login using email, username or phone + password
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login success with verification code sent (data is email)
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessLoginEmailResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusUnauthorized'
      summary: Login with email/username/phone
      tags:
      - Authentication
  /api/v1/auth/refresh-access-token:
    post:
      consumes:
      - application/json
      description: Refresh JWT token with refresh token + client id
      parameters:
      - description: Refresh Token (Bearer token format)
        in: header
        name: x-rtoken-id
        required: true
        type: string
      - description: Client ID
        in: header
        name: x-client-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: New tokens
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusUnauthorized'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      summary: Refresh Access Token
      tags:
      - Authentication
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user with email/username/password
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_internal_api_modules_user_models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created user
          schema:
            allOf:
            - $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_unarya_univia_internal_api_modules_user_models.User'
                status:
                  $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusOK'
              type: object
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      summary: Register new user
      tags:
      - Authentication
  /api/v1/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Reset password without old password (via verification flow)
      parameters:
      - description: Renew password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.RenewPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Password changed successfully
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      summary: Renew Password
      tags:
      - Authentication
  /api/v1/auth/user-info:
    get:
      consumes:
      - application/json
      description: Retrieve the user information by given token
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User info
          schema:
            allOf:
            - $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/github_com_unarya_univia_internal_api_modules_user_models.User'
                status:
                  $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusOK'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusUnauthorized'
        "403":
          description: 'Forbidden: insufficient permissions'
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusForbidden'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      security:
      - BearerAuth: []
      summary: Get User Info
      tags:
      - User
  /api/v1/auth/verification:
    post:
      consumes:
      - application/json
      description: handles the verification code process and token generation
      parameters:
      - description: Verify Code
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.VerifyCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Tokens response
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessVerifyCodeResponse'
        "400":
          description: Invalid Input
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      summary: Verify the code and generate token
      tags:
      - Authentication
  /api/v1/hello:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Hello World
      tags:
      - Health Check
  /api/v1/likes:
    get:
      description: Like the post
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID Required
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.LikeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully Like A Post
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessLikeAPostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      security:
      - BearerAuth: []
      summary: Like the post
      tags:
      - Social Routes
  /api/v1/likes/undo:
    get:
      description: DisLike the post
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Post ID Required
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.LikeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully Like A Post
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessDisLikeAPostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      security:
      - BearerAuth: []
      summary: DisLike the post
      tags:
      - Social Routes
  /api/v1/notifications:
    post:
      consumes:
      - application/json
      description: Retrieve notifications with filters (pagination, seen/unseen, search)
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Notification filter options
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.ListNotificationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List all notifications of the current user
      tags:
      - Notifications
  /api/v1/notifications/seen:
    put:
      consumes:
      - application/json
      description: Update notification status (seen) for the current user
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Notification ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.UpdateSeenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mark a notification as seen
      tags:
      - Notifications
  /api/v1/notifications/seen/all:
    put:
      description: Update all notifications of the current user to seen
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Mark all notifications as seen
      tags:
      - Notifications
  /api/v1/permissions/assign:
    post:
      consumes:
      - application/json
      description: Grant multiple permissions to a specific role
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Role ID and list of Permission IDs
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.AssignPermissionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Assign permissions to a role
      tags:
      - Permissions
  /api/v1/permissions/create:
    post:
      consumes:
      - application/json
      description: Admin creates a new permission
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: Permission name
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.CreatePermissionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: Create a new permission
      tags:
      - Permissions
  /api/v1/permissions/list:
    post:
      description: Get all permissions in the system
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - BearerAuth: []
      summary: List all permissions
      tags:
      - Permissions
  /api/v1/posts:
    get:
      description: Get detailed information of a single post by ID
      parameters:
      - description: Post ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully get details of this post
          schema:
            additionalProperties: true
            type: object
        "400":
          description: ID is required
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusUnauthorized'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      security:
      - BearerAuth: []
      summary: Get post details
      tags:
      - Social Routes
    put:
      consumes:
      - multipart/form-data
      description: Update post content, categories, and media files
      parameters:
      - description: Post ID
        in: formData
        name: id
        required: true
        type: string
      - description: Post content
        in: formData
        name: content
        required: true
        type: string
      - collectionFormat: csv
        description: List of category UUIDs
        in: formData
        items:
          type: string
        name: category_ids
        required: true
        type: array
      - description: Media files (multiple allowed)
        in: formData
        name: media
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Updated post successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusUnauthorized'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      security:
      - BearerAuth: []
      summary: Update a post
      tags:
      - Social Routes
  /api/v1/posts/categories:
    get:
      description: Retrieve all categories in the system
      produces:
      - application/json
      responses:
        "200":
          description: Successfully List Categories
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessListCategoriesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      summary: List categories
      tags:
      - Social Routes
  /api/v1/posts/create:
    post:
      consumes:
      - multipart/form-data
      description: Create a post with content, categories, and media uploads
      parameters:
      - description: Post content
        in: formData
        name: content
        required: true
        type: string
      - collectionFormat: csv
        description: List of category UUIDs
        in: formData
        items:
          type: string
        name: category_ids
        required: true
        type: array
      - description: Media files (multiple allowed)
        in: formData
        name: media
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Post Created Successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusUnauthorized'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      security:
      - BearerAuth: []
      summary: Create a new post
      tags:
      - Social Routes
  /api/v1/roles:
    get:
      description: Retrieve all roles in the system
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully List All Roles
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessListRolesResponse'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      security:
      - BearerAuth: []
      summary: List all roles
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Admin creates a new role with a unique name
      parameters:
      - description: Role Name
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Role Created Successfully
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessCreateRoleResponse'
        "400":
          description: Invalid Input
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "500":
          description: Internal orchestrator error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      summary: Create a new role
      tags:
      - Roles
  /api/v1/users/avatar:
    post:
      consumes:
      - application/json
      description: Get avatar of a user by user_id
      parameters:
      - description: Bearer <access_token>
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_unarya_univia_pkg_types.GetUserAvatarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Avatar URL
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.SuccessResponse'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusBadRequest'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusUnauthorized'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_unarya_univia_pkg_types.StatusInternalError'
      security:
      - BearerAuth: []
      summary: Get User Avatar
      tags:
      - User
  /healthz:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api_routes.HealthResponse'
      summary: Healthz
      tags:
      - Health Check
  /readyz:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_api_routes.ReadySuccessResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/internal_api_routes.ReadyUnavailableResponse'
      summary: Readyz
      tags:
      - Health Check
swagger: "2.0"
